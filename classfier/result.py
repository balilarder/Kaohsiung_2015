import plots
import ic_model


################
# labels distribution: TRAIN DATA
# tainan
label1 = [2400, 1487, 1023, 755, 579, 444, 357, 313, 267, 221]
label2 = [16085, 17072, 17550, 17840, 18031, 18174, 18265, 18323, 18377, 18427]
label3 = [191, 117, 103, 81, 66, 58, 54, 40, 32, 28]

# unit is %
portion1 = [12.85, 7.96, 5.48, 4.04, 3.1, 2.38, 1.91, 1.68, 1.43, 1.18]
portion2 = [86.13, 91.41, 93.97, 95.52, 96.55, 97.31, 97.8, 98.11, 98.4, 98.67]
portion3 = [1.02, 0.63, 0.55, 0.43, 0.35, 0.31, 0.29, 0.21, 0.17, 0.15]


################
# labels distribution: TRAIN DATA
# kaohsiung
label1 = [3617, 1489, 774, 439, 253, 134, 71, 31, 14, 7]
label2 = [30379, 32725, 33558, 33951, 34184, 34318, 34400, 34458, 34487, 34507]
label3 = [556, 338, 220, 162, 115, 100, 81, 63, 51, 38]

# unit is %
portion1 = [10.47, 4.31, 2.24, 1.27, 0.73, 0.39, 0.21, 0.09, 0.04, 0.02]
portion2 = [87.92, 94.71, 97.12, 98.26, 98.93, 99.32, 99.56, 99.73, 99.81, 99.87]
portion3 = [1.61, 0.98, 0.64, 0.47, 0.33, 0.29, 0.23, 0.18, 0.15, 0.11]



######## odd training, even testing
# tainan
"""
Title : decision tree(classifier)
set defferent alert threshold
label: both are contagious region
"""
title = "plot1"

precision1 = [0.76, 0.77, 0.76, 0.74, 0.71, 0.71, 0.66, 0.63, 0.58, 0.55]
recall1 = [0.66, 0.74, 0.74, 0.73, 0.68, 0.72, 0.71, 0.72, 0.71, 0.74]
# draw_precision_recall(precision, recall, title)


"""
Title : decision tree(classifier)
set defferent alert threshold
label: not a contagious region
"""
title = "plot2"
precision2 = [0.93, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99]
recall2 = [0.97, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99]
# draw_precision_recall(precision, recall, title)

"""
Title : decision tree(classifier)
set defferent alert threshold
label: only self is contagious region
"""
title = "plot3"
precision3 = [0.06, 0.09, 0.06, 0.06, 0.09, 0.05, 0.09, 0.09, 0.03, 0.07]
recall3 = [0, 0.02, 0.06, 0.1, 0.16, 0.06, 0.08, 0.12, 0.03, 0.06]
# draw_precision_recall(precision, recall, title)

### Tainan decision tree(max_depth = 2)
# label: both are contagious region
precision1_depth2 = [0.71, 0.89, 0.9, 0.89, 0.88, 0.86, 0.87, 0.82, 0.78, 0.73]
recall1_depth2 = [0.78, 0.71, 0.72, 0.61, 0.68, 0.69, 0.48, 0.53, 0.58, 0.62]

# label: not a contagious region
precision2_depth2 = [0.95, 0.97, 0.98, 0.98, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99]
recall2_depth2 = [0.95, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1]

# label: only self is contagious region
precision3_depth2 = [float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN')]
recall3_depth2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]



# Kaohsiung
"""
Title : decision tree(classifier)
set defferent alert threshold
label: both are contagious region
"""
title = "plot4"
precision4 = [0.76, 0.67, 0.55, 0.41, 0.37, 0.27, 0.26, 0.29, 0.26, 0.18]
recall4 = [0.5, 0.46, 0.44, 0.36, 0.34, 0.27, 0.28, 0.22, 0.12, 0.14]
# draw_precision_recall(precision, recall, title)

"""
Title : decision tree(classifier)
set defferent alert threshold
label: not a contagious region
"""
title = "plot5"
precision5 = [0.92, 0.96, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 1, 1]
recall5 = [0.98, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 1, 1, 1]
# draw_precision_recall(precision, recall, title)

"""
Title : decision tree(classifier)
set defferent alert threshold
label: only self is contagious region
"""
title = "plot6"
precision6 = [0, 0.09, 0.09, 0.01, 0.05, 0.06, 0.08, 0.09, 0.08, 0.08]
recall6 = [0, 0.03, 0.05, 0.01, 0.05, 0.06, 0.08, 0.12, 0.09, 0.08]
# draw_precision_recall(precision, recall, title)

#########################
# label = Both are contagious region
precision4_depth2 = [0.77, 0.77, 0.67, float('NaN'), float('NaN'), float('NaN'), float('NaN'), 0.39, float('NaN'), float('NaN')]
recall4_depth2 = [0.62, 0.48, 0.5, 0, 0, 0, 0, 0.14, 0, 0]

# label = not a contagious region
precision5_depth2 = [0.93, 0.96, 0.97, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 1]
recall5_depth2 = [0.97, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1]

# label = only self is contagious
precision6_depth2 = [float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), 0.26]
recall6_depth2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.07]



"""
tainan
title: ic model
threshold = 0.5
label: both are contagious region
"""
title = "plot7"
precision7 = [0.56, 0.47, 0.43, 0.43, 0.43, 0.42, 0.39, 0.37, 0.36, 0.33]
recall7 = [0.87, 0.86, 0.81, 0.79, 0.77, 0.69, 0.58, 0.56, 0.5, 0.44]
# draw_precision_recall(precision, recall, title)


"""
tainan
title: ic model
threshold = 0.5
label: not a contagoius region
"""
title = "plot8"
precision8 = [0.97, 0.98, 0.98, 0.99, 0.99, 0.99, 0.98, 0.99, 0.99, 0.99]
recall8 = [0.89, 0.91, 0.92, 0.94, 0.95, 0.96, 0.97, 0.97, 0.98, 0.98]
# draw_precision_recall(precision, recall, title)

"""
tainan
title: ic model
threshold = 0.5
label: only self is contagious region
"""
title = "plot9"
precision9 = [0.04, 0.05, 0.03, 0.06, 0.05, 0.06, 0, 0, 0.02, 0]
recall9 = [0.01, 0.02, 0.02, 0.05, 0.05, 0.06, 0, 0, 0.03, 0]
# draw_precision_recall(precision, recall, title)



"""
kaohsiung
title: ic model
threshold = 0.5
label: both are contagious region
"""
title = "plot10"
precision10 = [0.62, 0.53, 0.45, 0.37, 0.29, 0.21, 0.13, 0.15, 0.15, float('NaN')]
recall10 = [0.81, 0.73, 0.58, 0.46, 0.3, 0.16, 0.07, 0.04, 0.04, 0]
# draw_precision_recall(precision, recall, title)


"""
kaohsiung
title: ic model
threshold = 0.5
label: not a contagoius region
"""
title = "plot11"
precision11 = [0.96, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 1]
recall11 = [0.93, 0.95, 0.97, 0.98, 0.98, 0.99, 1, 1, 1, 1]
# draw_precision_recall(precision, recall, title)

"""
kaohsiung
title: ic model
threshold = 0.5
label: only self is contagious region
"""
title = "plot12"
precision12 = [0.04, 0.05, 0.05, 0.06, 0.06, 0.03, 0.03, 0, 0.03, 0.05]
recall12 = [0.01, 0.03, 0.03, 0.04, 0.05, 0.02, 0.02, 0, 0.01, 0.01]
# draw_precision_recall(precision, recall, title)

###############
"""
kaohsiung
adaboost
"""
# label = both are contagious region
precision25 = [0.78, 0.76, 0.72, 0.61, 0.52, 0.53, 0.39, 0.36, 0.43, 0.14]
recall25 = [0.6, 0.52, 0.45, 0.34, 0.28, 0.28, 0.18, 0.13, 0.14, 0.03]

# label = not a contagious region
precision26 = [0.93, 0.96, 0.97, 0.98, 0.98, 0.99, 0.99, 0.99, 1, 1]
recall26 = [0.98, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 0.99]

# label = only self is contagious region
precision27 = [0, 0, 0, 0.11, 0.12, 0.17, 0, 0, 0.08, 0.07]
recall27 = [0, 0, 0, 0.01, 0.01, 0.02, 0, 0, 0.09, 0.18]

###############
"""
kaohsiung
svm
"""
# label = both are contagious region
precision28 = [0.78, 0.78, 0.7, 0.63, 0.56, 0.47, float('NaN'), float('NaN'), float('NaN'), float('NaN'),]
recall28 = [0.57, 0.48, 0.35, 0.17, 0.07, 0.02, 0, 0, 0, 0]

# label = not a contagious region
precision29 = [0.93, 0.96, 0.97, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 1]
recall29 = [0.98, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1]

# label = only self is contagious region
precision30 = [float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN')]
recall30 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

##############
"""
kaohsiung
random forest
"""
# label = both are contagious region
precision31_depth2 = [0.8, 0.79, 0.79, float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN')]
recall31_depth2 = [0.59, 0.44, 0.21, 0, 0, 0, 0, 0, 0, 0]

# label = not a contagious region
precision32_depth2 = [0.93, 0.95, 0.96, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 1]
recall32_depth2 = [0.98, 0.99, 1, 1, 1, 1, 1, 1, 1, 1]

# only self is contagious region
precision33_depth2 = [float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), 0, 0.25, 0]
recall33_depth2 = [0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0] 


#################
"""
kaohsiung
just use last week
"""
# label = both are contagious region
precision34 = [0.7, 0.67, 0.6, 0.56, 0.5, 0.43, 0.34, 0.33, 0.24, 0.2]
recall34 = [0.68, 0.63, 0.58, 0.56, 0.5, 0.46, 0.37, 0.36, 0.26, 0.22]

# label = not a contagious region
precision35 = [0.95, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 1, 1, 1]
recall35 = [0.95, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 1, 1, 1]

# label = only self is contagious region
precision36 = [0.07, 0.1, 0.16, 0.14, 0.1, 0.09, 0.12, 0.17, 0.2, 0.19]
recall36 = [0.07, 0.11, 0.14, 0.13, 0.08, 0.08, 0.12, 0.17, 0.2, 0.19]


##############
"""
Tainan adaboost
alert_threshold=1~10
"""
# label = both are contagious region
precision16 = [0.75, 0.8, 0.84, 0.83, 0.83, 0.79, 0.76, 0.69, 0.61, 0.59]
recall16 = [0.74, 0.81, 0.79, 0.79, 0.74, 0.73, 0.74, 0.77, 0.74, 0.81]

# label = not a contagious region
precision17 = [0.95, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]
recall17 = [0.96, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]

# label = only self is contagious region
precision18 = [0, 0.1, float('NaN'), 1, 0.15, 0, 0.17, 0.12, 0.07, 0]
recall18 = [0, 0.01, 0, 0.02, 0.05, 0, 0.03, 0.03, 0.03, 0]


#############
# statics:
"""
Tainan just use last week
alert threshold=1~10
"""

# label = both are contagious region
precision13 = [0.72, 0.79, 0.81, 0.81, 0.8, 0.77, 0.74, 0.72, 0.68, 0.66]
recall13 = [0.75, 0.82, 0.82, 0.82, 0.82, 0.81, 0.81, 0.8, 0.78, 0.77]

# label = not a contagoius region
precision14 = [0.95, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]
recall14 = [0.95, 0.97, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]

# label = only self is contagious region
precision15 = [0.05, 0.09, 0.11, 0.12, 0.14, 0.12, 0.19, 0.25, 0.23, 0.23]
recall15 = [0.04, 0.09, 0.12, 0.14, 0.13, 0.09, 0.16, 0.21, 0.19, 0.22]


##############
# statics:
"""
Tainan svm
alert threshold=1~10
"""
# label = both are contagious region
precision19 = [0.77, 0.84, 0.84, 0.8, 0.79, 0.79, 0.75, 0.58, 0.47, 0.57]
recall19 = [0.73, 0.8, 0.8, 0.77, 0.76, 0.74, 0.69, 0.2, 0.07, 0.04]

# label = not a contagious region
precision20 = [0.94, 0.97, 0.98, 0.98, 0.99, 0.99, 0.99, 0.97, 0.98, 0.98]
recall20 = [0.97, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1]

# label = only self is contagious region
precision21 = [float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), 0, float('NaN')]
recall21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


###############
# statics:
"""
Tainan random forest
alert threshold
"""
# label = both are contagious region
precision22 = [0.77, 0.79, 0.79, 0.77, 0.75, 0.75, 0.69, 0.7, 0.61, 0.64]
recall22 = [0.69, 0.79, 0.8, 0.78, 0.76, 0.76, 0.76, 0.77, 0.72, 0.72]

# label = not a contagious region
precision23 = [0.94, 0.97, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]
recall23 = [0.97, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99]

# label = only self is contagious region
precision24 = [0, 0.05, 0, 0, 0.17, 0.17, 0, 0.5, 0, 0]
recall24 = [0, 0.01, 0, 0, 0.05, 0.03, 0, 0.06, 0, 0]

###
# Tainan random forest(max_depth =2)
# label = both are contagious region
precision22_depth2 = [0.77, 0.85, 0.86, 0.88, 0.89, 0.86, 0.81, 0.81, 0.77, 0.75]
recall22_depth2 = [0.71, 0.78, 0.73, 0.69, 0.64, 0.65, 0.7, 0.6, 0.64, 0.62]

# label = not a contagious region
precision23_depth2 = [0.94, 0.97, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99]
recall23_depth2 = [0.97, 0.99, 0.99, 0.99, 1, 1, 0.99, 1, 1, 1]

# label = only self is contagious region
precision24_depth2 = [float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN')]
recall24_depth2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


###############
"""
Tainan: overall precision, recall, accuracy
adaboost
svm
random forest(depth=2)
decision tree(depth=2)
ic model
just use last week
"""
precision_tainan_overall_adaboost = [0.7627599243856332, 0.8127690100430416, 0.843503937007874, 0.8314087759815243, 0.8251445086705202, 0.7947454844006568, 0.7569573283858998, 0.6994328922495274, 0.6172839506172839, 0.6]
precision_tainan_overall_svm = [0.7826725403817915, 0.8529411764705882, 0.8429833169774289, 0.8112773302646721, 0.7967257844474761, 0.7944535073409462, 0.7584158415841584, 0.5949367088607594, 0.4915254237288136, 0.5714285714285714]
precision_tainan_overall_randomforest = [0.8193926478423016, 0.8801065719360568, 0.8901345291479821, 0.8917018284106891, 0.8699186991869918, 0.8484848484848485, 0.8448687350835322, 0.8086734693877551, 0.7739938080495357, 0.7717391304347826]
precision_tainan_overall_decisiontree = [0.7168141592920354, 0.8983364140480592, 0.8971098265895954, 0.9069020866773676, 0.8833619210977701, 0.8639846743295019, 0.8695652173913043, 0.822742474916388, 0.78125, 0.7326388888888888]
precision_tainan_overall_icmodel = [0.5704717530576587, 0.4872499019223225, 0.44313725490196076, 0.43669402110199296, 0.4296987087517934, 0.41614349775784754, 0.3926453143534994, 0.3736413043478261, 0.3527454242928453, 0.32525252525252524]
precision_tainan_overall_just = [0.6953507340946167, 0.750161394448031, 0.774468085106383, 0.7862281603288798, 0.7787286063569682, 0.7619718309859155, 0.7383627608346709, 0.7090909090909091, 0.6757322175732218, 0.6525821596244131]

recall_tainan_overall_adaboost = [0.6801517067003793, 0.7619367854741089, 0.7517543859649123, 0.759493670886076, 0.7155388471177945, 0.7055393586005831, 0.7022375215146299, 0.74, 0.702576112412178, 0.7560321715817694]
recall_tainan_overall_svm = [0.6738305941845765, 0.7410894418291862, 0.7535087719298246, 0.7436708860759493, 0.731829573934837, 0.7099125364431487, 0.6592082616179001, 0.188, 0.06791569086651054, 0.032171581769437]
recall_tainan_overall_randomforest = [0.6481247366203119, 0.6664425016812374, 0.6964912280701754, 0.6687763713080169, 0.6704260651629073, 0.6938775510204082, 0.6092943201376936, 0.634, 0.585480093676815, 0.5710455764075067]
recall_tainan_overall_decisiontree = [0.7168141592920354, 0.6536650975117687, 0.6807017543859649, 0.5959915611814346, 0.6453634085213033, 0.6574344023323615, 0.4475043029259897, 0.492, 0.5269320843091335, 0.5656836461126006]
recall_tainan_overall_icmodel = [0.8255372945638433, 0.8352387357094821, 0.7929824561403509, 0.7858649789029536, 0.7506265664160401, 0.6763848396501457, 0.5697074010327022, 0.55, 0.4964871194379391, 0.4316353887399464]
recall_tainan_overall_just = [0.7184997892962495, 0.7814391392064559, 0.7982456140350878, 0.8069620253164557, 0.7982456140350878, 0.7886297376093294, 0.7917383820998278, 0.78, 0.7564402810304449, 0.7453083109919572]

accuracy_tainan_overall_adaboost = [0.9212268865567217, 0.9615817091454273, 0.9723888055972014, 0.9766366816591704, 0.9782608695652174, 0.9795727136431784, 0.9810094952523738, 0.9819465267366316, 0.980447276361819, 0.9825712143928036]
accuracy_tainan_overall_svm = [0.9239130434782609, 0.9640804597701149, 0.9724512743628186, 0.9745752123938031, 0.9773238380809596, 0.9796976511744128, 0.9800099950024987, 0.9706396801599201, 0.973263368315842, 0.9768865567216392]
accuracy_tainan_overall_randomforest = [0.9255372313843079, 0.9600824587706147, 0.9721389305347327, 0.9765742128935532, 0.9788230884557722, 0.9798225887056472, 0.9818840579710145, 0.9835082458770614, 0.98531984007996, 0.9861944027986007]
accuracy_tainan_overall_decisiontree = [0.9160419790104948, 0.9609570214892553, 0.9717016491754122, 0.9724512743628186, 0.9780734632683659, 0.9808845577211395, 0.9775112443778111, 0.9808220889555223, 0.9834457771114443, 0.9850699650174912]
accuracy_tainan_overall_icmodel = [0.8819965017491255, 0.9030484757621189, 0.9142928535732134, 0.9272863568215892, 0.9379060469765117, 0.9454647676161919, 0.9523988005997002, 0.9571464267866067, 0.9622688655672164, 0.9658920539730135]
accuracy_tainan_overall_just = [0.9116066966516742, 0.9555222388805598, 0.9690779610194903, 0.9755747126436781, 0.9786356821589205, 0.980384807596202, 0.9822588705647176, 0.9831334332833583, 0.9838205897051474, 0.9848200899550225]


#############
"""
kaohsiung: overall precision ,recall, accuracy
adaboost
svm
random forest
decision tree
ic model
just last week
"""
precision_kaohsiung_overall_adaboost = [0.7827622748145532, 0.7691197691197691, 0.7318361955085865, 0.6355353075170843, 0.5894736842105263, 0.5722543352601156, 0.43, 0.4444444444444444, 0.20168067226890757, 0.09947643979057591]
precision_kaohsiung_overall_svm = [0.788261515601783, 0.7811501597444089, 0.7171052631578947, 0.6782178217821783, 0.625, 0.5333333333333333, float('NaN'), float('NaN'), float('NaN'), float('NaN')]
precision_kaohsiung_overall_randomforest = [0.8150657632522917, 0.8437118437118437, 0.8439716312056738, float('NaN'), float('NaN'), float('NaN'), float('NaN'), float('NaN'), 1.0, 0.5333333333333333]
precision_kaohsiung_overall_decisiontree = [0.7747382640999663, 0.7744479495268138, 0.6761800219538968, float('NaN'), float('NaN'), float('NaN'), float('NaN'), 0.5121951219512195, float('NaN'), 0.25]
precision_kaohsiung_overall_icmodel = [0.6236734693877551, 0.5291695264241593, 0.4515366430260047, 0.3948620361560419, 0.3059006211180124, 0.24104234527687296, 0.15204678362573099, 0.0958904109589041, 0.08, 0.047619047619047616]
precision_kaohsiung_overall_just = [0.6752378503471329, 0.6478076379066479, 0.5882352941176471, 0.5469613259668509, 0.49760765550239233, 0.43838862559241704, 0.38175675675675674, 0.3394495412844037, 0.29878048780487804, 0.2719298245614035]

recall_kaohsiung_overall_adaboost = [0.5500124100273021, 0.4778126400717167, 0.3923512747875354, 0.3016216216216216, 0.26127527216174184, 0.24087591240875914, 0.1524822695035461, 0.0970873786407767, 0.15286624203821655, 0.17592592592592593]
recall_kaohsiung_overall_svm = [0.5266815586994291, 0.43836844464365754, 0.3087818696883853, 0.14810810810810812, 0.06220839813374806, 0.019464720194647202, 0.0, 0.0, 0.0, 0.0]
recall_kaohsiung_overall_randomforest = [0.5075701166542567, 0.3097265800089646, 0.16855524079320114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006369426751592357, 0.07407407407407407]
recall_kaohsiung_overall_decisiontree = [0.5693720526185158, 0.44016136261766026, 0.43626062322946174, 0.0, 0.0, 0.0, 0.0, 0.10194174757281553, 0.0, 0.009259259259259259]
recall_kaohsiung_overall_icmodel = [0.7585008687019111, 0.6911698789780367, 0.5410764872521246, 0.4486486486486487, 0.30637636080870917, 0.18004866180048662, 0.09219858156028368, 0.03398058252427184, 0.025477707006369428, 0.009259259259259259]
recall_kaohsiung_overall_just = [0.6517746339041945, 0.6158673240699238, 0.5594900849858357, 0.5351351351351351, 0.48522550544323484, 0.45012165450121655, 0.40070921985815605, 0.3592233009708738, 0.31210191082802546, 0.28703703703703703]

accuracy_kaohsiung_overall_adaboost = [0.9180172879524582, 0.9498581847649918, 0.9641747703943814, 0.972784981091302, 0.9800108049702864, 0.9869665045921123, 0.9900054024851431, 0.99287547271745, 0.9923014586709886, 0.9911871961102107]
accuracy_kaohsiung_overall_svm = [0.9163627768773636, 0.9484400324149108, 0.961237169097785, 0.971198001080497, 0.9788290113452188, 0.9861561318206374, 0.9904781199351702, 0.9930443003781739, 0.9946988114532685, 0.9963533225283631]
accuracy_kaohsiung_overall_randomforest = [0.9173419773095624, 0.9436790923824959, 0.9588735818476499, 0.9687668827660724, 0.9782887628309023, 0.9861223662884927, 0.9904781199351702, 0.9930443003781739, 0.9947325769854133, 0.9963870880605078]
accuracy_kaohsiung_overall_decisiontree = [0.9188951917882225, 0.9481699081577526, 0.9631618044300378, 0.9687668827660724, 0.9782887628309023, 0.9861223662884927, 0.9904781199351702, 0.9930780659103188, 0.9946988114532685, 0.9962857914640735]
accuracy_kaohsiung_overall_icmodel = [0.9048824959481362, 0.9304092382495948, 0.9467855213398163, 0.9613047001620746, 0.9698473797947056, 0.9807536466774717, 0.9864600216099406, 0.9910521339816315, 0.9932806591031874, 0.9957117774176121]
accuracy_kaohsiung_overall_just = [0.9099810913019989, 0.9458400864397623, 0.9603254997298758, 0.9716369529983793, 0.9781874662344678, 0.9843665586169638, 0.9881145326850351, 0.9906807131280388, 0.9924702863317126, 0.9945975148568341]



#############
"""
Tainan 2015 ic model ROC
alert threshold = 1
threshold = 0~1, stride = 0.05
week = 32 39 45
"""
title = "Tainan ROC"
early_FPR1 = [1, 0.302734375, 0.302734375, 0.302734375, 0.294921875, 0.29296875, 0.29296875, 0.279296875, 0.271484375, 0.271484375, 0.248046875, 0.24609375, 0.23828125, 0.23828125, 0.20703125, 0.197265625, 0.1796875, 0.169921875, 0.154296875, 0.138671875, 0]
early_TPR1 = [1, 0.896774193548387, 0.896774193548387, 0.896774193548387, 0.8838709677419355, 0.8709677419354839, 0.8709677419354839, 0.8580645161290322, 0.8516129032258064, 0.8516129032258064, 0.8258064516129032, 0.8258064516129032, 0.8193548387096774, 0.8193548387096774, 0.8064516129032258, 0.7870967741935484, 0.7483870967741936, 0.7354838709677419, 0.7225806451612903, 0.6903225806451613, 0]

middle_FPR1 = [1, 0.323943661971831, 0.323943661971831, 0.323943661971831, 0.323943661971831, 0.30985915492957744, 0.30985915492957744, 0.29577464788732394, 0.29577464788732394, 0.29577464788732394, 0.2640845070422535, 0.2640845070422535, 0.2640845070422535, 0.2535211267605634, 0.24295774647887325, 0.22887323943661972, 0.22183098591549297, 0.21830985915492956, 0.1936619718309859, 0.18661971830985916, 0]
middle_TPR1 = [1, 0.9086161879895561, 0.9086161879895561, 0.9086161879895561, 0.9086161879895561, 0.9060052219321149, 0.9060052219321149, 0.9007832898172323, 0.8981723237597912, 0.8981723237597912, 0.8825065274151436, 0.8825065274151436, 0.8772845953002611, 0.8720626631853786, 0.8590078328981723, 0.856396866840731, 0.8511749347258486, 0.8485639686684073, 0.835509138381201, 0.804177545691906, 0]

later_FPR1 = [1, 0.45935727788279773, 0.45935727788279773, 0.45935727788279773, 0.4499054820415879, 0.44801512287334594, 0.44801512287334594, 0.43478260869565216, 0.42533081285444235, 0.42533081285444235, 0.40831758034026466, 0.40264650283553877, 0.391304347826087, 0.3856332703213611, 0.3591682419659735, 0.3440453686200378, 0.33459357277882795, 0.31568998109640833, 0.30245746691871456, 0.28544423440453687, 0]
later_TPR1 = [1, 0.9130434782608695, 0.9130434782608695, 0.9130434782608695, 0.9057971014492754, 0.9057971014492754, 0.9057971014492754, 0.8840579710144928, 0.8695652173913043, 0.8695652173913043, 0.855072463768116, 0.8478260869565217, 0.8333333333333334, 0.8260869565217391, 0.7971014492753623, 0.7898550724637681, 0.7681159420289855, 0.7681159420289855, 0.7318840579710145, 0.6956521739130435, 0]
ic_model.roc_plot(early_FPR1, early_TPR1, middle_FPR1, middle_TPR1, later_FPR1, later_TPR1, "Tainan_ROC_eta1")
"""
Kaohsiung 2015 ic model ROC
alert threshold = 1
threshold = 0~1, stride = 0.05
week = 40 46 48
"""
title = "Kaohsiung ROC"
early_FPR1 = [1, 0.38660399529964745, 0.38660399529964745, 0.381903642773208, 0.37132784958871917, 0.3537015276145711, 0.3525264394829612, 0.3419506462984724, 0.3325499412455934, 0.3290246768507638, 0.2796709753231492, 0.27614571092831963, 0.25851938895417154, 0.2491186839012926, 0.21856639247943596, 0.19858989424206816, 0.17743830787309048, 0.16686251468860164, 0.1492361927144536, 0.1245593419506463, 0]
early_TPR1 = [1, 0.8459530026109661, 0.8459530026109661, 0.8459530026109661, 0.825065274151436, 0.8172323759791122, 0.8172323759791122, 0.8093994778067886, 0.7885117493472585, 0.7859007832898173, 0.7650130548302873, 0.7597911227154047, 0.7493472584856397, 0.7467362924281984, 0.720626631853786, 0.6866840731070496, 0.6501305483028721, 0.618798955613577, 0.566579634464752, 0.5169712793733682, 0]

middle_FPR1 = [1, 0.2476007677543186, 0.2476007677543186, 0.2476007677543186, 0.2418426103646833, 0.23032629558541268, 0.23032629558541268, 0.21880998080614203, 0.21113243761996162, 0.2072936660268714, 0.1785028790786948, 0.1727447216890595, 0.16698656429942418, 0.16314779270633398, 0.15547024952015356, 0.14587332053742802, 0.14395393474088292, 0.1381957773512476, 0.11900191938579655, 0.10556621880998081, 0]
middle_TPR1 = [1, 0.8667601683029453, 0.8667601683029453, 0.8653576437587658, 0.8639551192145862, 0.8541374474053296, 0.8541374474053296, 0.8345021037868162, 0.8302945301542777, 0.820476858345021, 0.7938288920056101, 0.7868162692847125, 0.7741935483870968, 0.7629733520336606, 0.7447405329593267, 0.7251051893408135, 0.7152875175315568, 0.6886395511921458, 0.6479663394109397, 0.6016830294530154, 0]

later_FPR1 = [1, 0.3637770897832817, 0.3637770897832817, 0.3622291021671827, 0.3591331269349845, 0.34674922600619196, 0.34674922600619196, 0.3328173374613003, 0.326625386996904, 0.326625386996904, 0.3018575851393189, 0.29721362229102166, 0.28173374613003094, 0.2770897832817337, 0.2585139318885449, 0.23839009287925697, 0.23374613003095976, 0.21826625386996903, 0.2043343653250774, 0.17337461300309598, 0]
later_TPR1 = [1, 0.8928571428571429, 0.8928571428571429, 0.8928571428571429, 0.8928571428571429, 0.8877551020408163, 0.8877551020408163, 0.8724489795918368, 0.8656462585034014, 0.8605442176870748, 0.8384353741496599, 0.8367346938775511, 0.8248299319727891, 0.8112244897959183, 0.7857142857142857, 0.7653061224489796, 0.7517006802721088, 0.7329931972789115, 0.6955782312925171, 0.6479591836734694, 0]
ic_model.roc_plot(early_FPR1, early_TPR1, middle_FPR1, middle_TPR1, later_FPR1, later_TPR1, "Kaohsiung_ROC_eta1")

###########
# ic model ROC:
# eta = 3
title = "Tainan ROC"
early_FPR3 = [1, 0.2252836304700162, 0.2252836304700162, 0.2252836304700162, 0.2252836304700162, 0.21393841166936792, 0.21393841166936792, 0.20907617504051865, 0.20745542949756887, 0.20583468395461912, 0.1912479740680713, 0.1912479740680713, 0.1847649918962723, 0.18314424635332252, 0.1766612641815235, 0.17017828200972449, 0.16531604538087522, 0.15559157212317667, 0.1458670988654781, 0.13614262560777957, 0]
early_TPR3 = [1, 0.96, 0.96, 0.96, 0.96, 0.96, 0.96, 0.96, 0.94, 0.94, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.88, 0.88, 0.86, 0.84, 0]

middle_FPR3 = [1, 0.08878504672897196, 0.08878504672897196, 0.08878504672897196, 0.08878504672897196, 0.08644859813084112, 0.08644859813084112, 0.07710280373831775, 0.07710280373831775, 0.07710280373831775, 0.07009345794392523, 0.07009345794392523, 0.07009345794392523, 0.07009345794392523, 0.07009345794392523, 0.07009345794392523, 0.07009345794392523, 0.06775700934579439, 0.06542056074766354, 0.0630841121495327, 0]
middle_TPR3 = [1, 0.8410041841004184, 0.8410041841004184, 0.8410041841004184, 0.8410041841004184, 0.8368200836820083, 0.8368200836820083, 0.8326359832635983, 0.8326359832635983, 0.8326359832635983, 0.8200836820083682, 0.8200836820083682, 0.8200836820083682, 0.8158995815899581, 0.8117154811715481, 0.799163179916318, 0.799163179916318, 0.7866108786610879, 0.7782426778242678, 0.7573221757322176, 0]

later_FPR3 = [1, 0.3323076923076923, 0.3323076923076923, 0.3323076923076923, 0.3323076923076923, 0.32, 0.32, 0.31384615384615383, 0.31384615384615383, 0.3123076923076923, 0.2923076923076923, 0.2923076923076923, 0.2907692307692308, 0.2876923076923077, 0.28307692307692306, 0.2676923076923077, 0.25846153846153846, 0.24769230769230768, 0.24, 0.2230769230769231, 0]
later_TPR3 = [1, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.7058823529411765, 0.6470588235294118, 0.6470588235294118, 0.6470588235294118, 0.6470588235294118, 0.5294117647058824, 0]
ic_model.roc_plot(early_FPR3, early_TPR3, middle_FPR3, middle_TPR3, later_FPR3, later_TPR3, "Tainan_ROC_eta3")


title = "Kaohsiung ROC"
early_FPR3 = [1, 0.15794143744454303, 0.15794143744454303, 0.15794143744454303, 0.15616681455190773, 0.1526175687666371, 0.1526175687666371, 0.14551907719609583, 0.14374445430346053, 0.1419698314108252, 0.1064773735581189, 0.1064773735581189, 0.10381543921916593, 0.10381543921916593, 0.09671694764862467, 0.08695652173913043, 0.08518189884649512, 0.08429458740017746, 0.08163265306122448, 0.0771960958296362, 0]
early_TPR3 = [1, 0.7850467289719626, 0.7850467289719626, 0.7850467289719626, 0.7850467289719626, 0.7476635514018691, 0.7476635514018691, 0.719626168224299, 0.719626168224299, 0.7102803738317757, 0.5794392523364486, 0.5794392523364486, 0.5700934579439252, 0.5700934579439252, 0.5514018691588785, 0.4672897196261682, 0.4672897196261682, 0.4485981308411215, 0.42990654205607476, 0.37383177570093457, 0]

middle_FPR3 = [1, 0.10532276330690826, 0.10532276330690826, 0.10532276330690826, 0.10532276330690826, 0.10419026047565119, 0.10419026047565119, 0.09739524348810873, 0.09739524348810873, 0.09739524348810873, 0.07361268403171008, 0.07361268403171008, 0.07021517553793885, 0.07021517553793885, 0.06795016987542468, 0.05436013590033975, 0.05436013590033975, 0.053227633069082674, 0.052095130237825596, 0.05096262740656852, 0]
middle_TPR3 = [1, 0.6324786324786325, 0.6324786324786325, 0.6324786324786325, 0.6296296296296297, 0.6153846153846154, 0.6153846153846154, 0.5954415954415955, 0.5925925925925926, 0.5925925925925926, 0.5327635327635327, 0.5327635327635327, 0.5299145299145299, 0.5213675213675214, 0.4985754985754986, 0.4586894586894587, 0.4472934472934473, 0.4301994301994302, 0.4074074074074074, 0.3903133903133903, 0]

later_FPR3 = [1, 0.16003976143141152, 0.16003976143141152, 0.16003976143141152, 0.16003976143141152, 0.15705765407554673, 0.15705765407554673, 0.15009940357852883, 0.15009940357852883, 0.15009940357852883, 0.12027833001988071, 0.12027833001988071, 0.11630218687872763, 0.1143141153081511, 0.10934393638170974, 0.09642147117296222, 0.09443339960238568, 0.09145129224652088, 0.09045725646123261, 0.0874751491053678, 0]
later_TPR3 = [1, 0.6578947368421053, 0.6578947368421053, 0.6578947368421053, 0.6535087719298246, 0.6403508771929824, 0.6403508771929824, 0.6096491228070176, 0.6052631578947368, 0.6052631578947368, 0.543859649122807, 0.543859649122807, 0.5394736842105263, 0.5350877192982456, 0.5175438596491229, 0.4868421052631579, 0.4824561403508772, 0.4605263157894737, 0.42543859649122806, 0.39473684210526316, 0]
ic_model.roc_plot(early_FPR3, early_TPR3, middle_FPR3, middle_TPR3, later_FPR3, later_TPR3, "Kaohsiung_ROC_eta3")

##########################



###########
# ic model ROC:
# eta = 6 (by WTO)
title = "Tainan ROC"
early_FPR6 = [1, 0.13643410852713178, 0.13643410852713178, 0.13643410852713178, 0.13643410852713178, 0.13643410852713178, 0.13643410852713178, 0.13023255813953488, 0.13023255813953488, 0.13023255813953488, 0.11007751937984496, 0.10852713178294573, 0.10697674418604651, 0.10387596899224806, 0.09147286821705426, 0.08992248062015504, 0.08992248062015504, 0.08527131782945736, 0.07751937984496124, 0.07131782945736434, 0]
early_TPR6 = [1, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.9090909090909091, 0.8636363636363636, 0.8636363636363636, 0.8636363636363636, 0.8181818181818182, 0.8181818181818182, 0.8181818181818182, 0.8181818181818182, 0.8181818181818182, 0]

middle_FPR6 = [1, 0.04448742746615087, 0.04448742746615087, 0.04448742746615087, 0.04448742746615087, 0.04448742746615087, 0.04448742746615087, 0.03868471953578337, 0.03868471953578337, 0.03868471953578337, 0.03288201160541586, 0.03288201160541586, 0.03288201160541586, 0.03288201160541586, 0.029013539651837523, 0.027079303675048357, 0.02321083172147002, 0.02127659574468085, 0.019342359767891684, 0.019342359767891684, 0]
middle_TPR6 = [1, 0.7933333333333333, 0.7933333333333333, 0.7933333333333333, 0.7933333333333333, 0.7933333333333333, 0.7933333333333333, 0.7866666666666666, 0.7866666666666666, 0.7866666666666666, 0.7266666666666667, 0.7266666666666667, 0.72, 0.7133333333333334, 0.68, 0.6666666666666666, 0.66, 0.66, 0.6133333333333333, 0.5933333333333334, 0]

later_FPR6 = [1, 0.18618618618618618, 0.18618618618618618, 0.18618618618618618, 0.18618618618618618, 0.1831831831831832, 0.1831831831831832, 0.16966966966966968, 0.16966966966966968, 0.16966966966966968, 0.15615615615615616, 0.15615615615615616, 0.15465465465465467, 0.15315315315315314, 0.13813813813813813, 0.12912912912912913, 0.12462462462462462, 0.12162162162162163, 0.11861861861861862, 0.1111111111111111, 0]
later_TPR6 = [1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0]
ic_model.roc_plot(early_FPR6, early_TPR6, middle_FPR6, middle_TPR6, later_FPR6, later_TPR6, "Tainan_ROC_eta6")



title = "Kaohsiung ROC"
early_FPR6 = [1, 0.03052805280528053, 0.03052805280528053, 0.03052805280528053, 0.03052805280528053, 0.03052805280528053, 0.03052805280528053, 0.0297029702970297, 0.0297029702970297, 0.0297029702970297, 0.019801980198019802, 0.019801980198019802, 0.019801980198019802, 0.019801980198019802, 0.018151815181518153, 0.018151815181518153, 0.018151815181518153, 0.018151815181518153, 0.018151815181518153, 0.018151815181518153, 0]
early_TPR6 = [1, 0.5454545454545454, 0.5454545454545454, 0.5454545454545454, 0.5454545454545454, 0.5454545454545454, 0.5454545454545454, 0.5, 0.5, 0.5, 0.3181818181818182, 0.3181818181818182, 0.3181818181818182, 0.3181818181818182, 0.2727272727272727, 0.2727272727272727, 0.2727272727272727, 0.22727272727272727, 0.22727272727272727, 0.22727272727272727, 0]

middle_FPR6 = [1, 0.024816176470588234, 0.024816176470588234, 0.024816176470588234, 0.024816176470588234, 0.024816176470588234, 0.024816176470588234, 0.02389705882352941, 0.02389705882352941, 0.02389705882352941, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0.019301470588235295, 0]
middle_TPR6 = [1, 0.2534246575342466, 0.2534246575342466, 0.2534246575342466, 0.2534246575342466, 0.2465753424657534, 0.2465753424657534, 0.2465753424657534, 0.2465753424657534, 0.2465753424657534, 0.1780821917808219, 0.1780821917808219, 0.1780821917808219, 0.1780821917808219, 0.1643835616438356, 0.1643835616438356, 0.1643835616438356, 0.1643835616438356, 0.1643835616438356, 0.1643835616438356, 0]

later_FPR6 = [1, 0.04709840201850295, 0.04709840201850295, 0.04709840201850295, 0.04709840201850295, 0.04625735912531539, 0.04625735912531539, 0.045416316232127836, 0.045416316232127836, 0.045416316232127836, 0.03532380151387721, 0.03532380151387721, 0.03532380151387721, 0.03532380151387721, 0.0336417157275021, 0.0336417157275021, 0.0336417157275021, 0.0336417157275021, 0.0336417157275021, 0.0336417157275021, 0]
later_TPR6 = [1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0.1111111111111111, 0]
ic_model.roc_plot(early_FPR6, early_TPR6, middle_FPR6, middle_TPR6, later_FPR6, later_TPR6, "Kaohsiung_ROC_eta6")

####################
"""
ONLY IC MODEL topk(alpha = 0)
eta = 3
32, 39, 45
tainan
top1-20
"""
tainan_topk_32_0 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.2857142857142857, 0.375, 0.3333333333333333, 0.3, 0.2727272727272727, 0.25, 0.23076923076923078, 0.21428571428571427, 0.2, 0.25, 0.23529411764705882, 0.2222222222222222, 0.21052631578947367, 0.2]
tainan_topk_39_0 = [1.0, 1.0, 1.0, 0.75, 0.6, 0.5, 0.5714285714285714, 0.625, 0.6666666666666666, 0.7, 0.7272727272727273, 0.6666666666666666, 0.6923076923076923, 0.7142857142857143, 0.7333333333333333, 0.75, 0.7647058823529411, 0.7777777777777778, 0.7368421052631579, 0.75]
tainan_topk_45_0 = [0.0, 0.0, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1, 0.09090909090909091, 0.08333333333333333, 0.07692307692307693, 0.07142857142857142, 0.06666666666666667, 0.0625, 0.058823529411764705, 0.05555555555555555, 0.05263157894736842, 0.05]

##################
"""
alpha = 1
32 29 45
tainan
top 1-20
"""
tainan_topk_32_1 = [1.0, 1.0, 1.0, 0.75, 0.8, 0.8333333333333334, 0.8571428571428571, 0.875, 0.8888888888888888, 0.9, 0.9090909090909091, 0.9166666666666666, 0.9230769230769231, 0.8571428571428571, 0.8, 0.75, 0.7058823529411765, 0.7222222222222222, 0.7368421052631579, 0.75]
tainan_topk_39_1 = [1.0, 1.0, 1.0, 1.0, 0.8, 0.6666666666666666, 0.7142857142857143, 0.625, 0.6666666666666666, 0.7, 0.7272727272727273, 0.75, 0.7692307692307693, 0.7857142857142857, 0.8, 0.8125, 0.8235294117647058, 0.8333333333333334, 0.8421052631578947, 0.85]
tainan_topk_45_1 = [0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.3333333333333333, 0.2857142857142857, 0.25, 0.2222222222222222, 0.2, 0.18181818181818182, 0.16666666666666666, 0.15384615384615385, 0.14285714285714285, 0.13333333333333333, 0.125, 0.11764705882352941, 0.1111111111111111, 0.10526315789473684, 0.1]



##################
"""
alpha = 0.1
32 39 45
tainan
top1-20
"""
# tainan_topk_32_01 = [1.0, 1.0, 1.0, 0.75, 0.8, 0.8333333333333334, 0.8571428571428571, 0.875, 0.8888888888888888, 0.9, 0.9090909090909091, 0.9166666666666666, 0.9230769230769231, 0.8571428571428571, 0.8, 0.75, 0.7058823529411765, 0.7222222222222222, 0.7368421052631579, 0.75]
# tainan_topk_39_01 = 
# tainan_topk_45_01 = 



##################
"""
alpha = 0.01
32 39 45
tainan
top1-20
"""
tainan_topk_32_001 = [1.0, 1.0, 1.0, 0.75, 0.8, 0.8333333333333334, 0.8571428571428571, 0.875, 0.8888888888888888, 0.9, 0.9090909090909091, 0.9166666666666666, 0.8461538461538461, 0.7857142857142857, 0.7333333333333333, 0.6875, 0.7058823529411765, 0.7222222222222222, 0.7368421052631579, 0.7]
tainan_topk_39_001 = [1.0, 1.0, 1.0, 1.0, 0.8, 0.6666666666666666, 0.7142857142857143, 0.625, 0.6666666666666666, 0.7, 0.7272727272727273, 0.75, 0.7692307692307693, 0.7857142857142857, 0.8, 0.8125, 0.8235294117647058, 0.8333333333333334, 0.8421052631578947, 0.85]
tainan_topk_45_001 = [0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.3333333333333333, 0.2857142857142857, 0.25, 0.2222222222222222, 0.2, 0.18181818181818182, 0.16666666666666666, 0.15384615384615385, 0.14285714285714285, 0.13333333333333333, 0.125, 0.11764705882352941, 0.1111111111111111, 0.10526315789473684, 0.1]


##################
"""
alpha = 0.0001
32 39 45
tainan
top1-20
"""
tainan_topk_32_00001 = [1.0, 1.0, 1.0, 0.75, 0.8, 0.8333333333333334, 0.8571428571428571, 0.875, 0.7777777777777778, 0.7, 0.6363636363636364, 0.5833333333333334, 0.6153846153846154, 0.6428571428571429, 0.6666666666666666, 0.625, 0.5882352941176471, 0.5555555555555556, 0.5263157894736842, 0.5]
tainan_topk_39_00001 = [1.0, 1.0, 1.0, 1.0, 0.8, 0.6666666666666666, 0.7142857142857143, 0.625, 0.6666666666666666, 0.7, 0.7272727272727273, 0.75, 0.7692307692307693, 0.7857142857142857, 0.8, 0.8125, 0.8235294117647058, 0.8333333333333334, 0.8421052631578947, 0.85]
tainan_topk_45_00001 = [0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.3333333333333333, 0.2857142857142857, 0.25, 0.2222222222222222, 0.2, 0.18181818181818182, 0.16666666666666666, 0.15384615384615385, 0.14285714285714285, 0.13333333333333333, 0.125, 0.11764705882352941, 0.1111111111111111, 0.10526315789473684, 0.1]


#################
"""
Only IC model topk
eta = 3
40, 46, 48
kaohsiung
top1-20
"""
kaohsiung_topk_40 = [0.0, 0.0, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.2857142857142857, 0.25, 0.2222222222222222, 0.2, 0.18181818181818182, 0.16666666666666666, 0.23076923076923078, 0.21428571428571427, 0.2, 0.1875, 0.17647058823529413, 0.16666666666666666, 0.15789473684210525, 0.15]
kaohsiung_topk_46 = [1.0, 1.0, 1.0, 1.0, 0.8, 0.8333333333333334, 0.8571428571428571, 0.75, 0.6666666666666666, 0.7, 0.7272727272727273, 0.75, 0.6923076923076923, 0.7142857142857143, 0.6666666666666666, 0.6875, 0.6470588235294118, 0.6666666666666666, 0.6842105263157895, 0.7]
kaohsiung_topk_48 = [1.0, 1.0, 0.6666666666666666, 0.75, 0.6, 0.6666666666666666, 0.5714285714285714, 0.5, 0.5555555555555556, 0.6, 0.6363636363636364, 0.6666666666666666, 0.6153846153846154, 0.5714285714285714, 0.5333333333333333, 0.5625, 0.5882352941176471, 0.6111111111111112, 0.631578947368421, 0.65]


###########
# from 0 to 1 Tainan
# decision tree
# precision
precision021_tree = [0.09102402022756005, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.020066889632107024, 0.024305555555555556, 0.04513888888888889]
# recall
recall021_tree = [0.32335329341317365, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05454545454545454, 0.0673076923076923, 0.1368421052631579]


###########
# from 0 to 1 Tainan
# svm 
# precision
precision021_svm = [0.040137053352912386, 0.025541795665634675, 0.03729146221786065, 0.02991944764096663, 0.034106412005457026, 0.02936378466557912, 0.02178217821782178, 0.056962025316455694, 0.0847457627118644, 0.047619047619047616]
recall021_svm = [0.12275449101796407, 0.10153846153846154, 0.16521739130434782, 0.14207650273224043, 0.15527950310559005, 0.12413793103448276, 0.09090909090909091, 0.08181818181818182, 0.04807692307692308, 0.010526315789473684]

###########
# from 0 to 1 Tainan
# random forest
# precision
precision021_randomforest = [0.0, 0.0, 0.0, 0.001519756838905775, 0.0033613445378151263, 0.0, 0.0, 0.01366120218579235, 0.020172910662824207, 0.01098901098901099]
# recall
recall021_randomforest = [0.0, 0.0, 0.0, 0.00546448087431694, 0.012422360248447204, 0.0, 0.0, 0.045454545454545456, 0.0673076923076923, 0.031578947368421054]

###########
# from 0 to 1 Tainan
# adaboost
# precision
precision021_adaboost = [0.029773156899810964, 0.05164992826398852, 0.02952755905511811, 0.03810623556581986, 0.02745664739884393, 0.0180623973727422, 0.014842300556586271, 0.04725897920604915, 0.0823045267489712, 0.09361702127659574]
# recall 
recall021_adaboost = [0.09431137724550898, 0.22153846153846155, 0.13043478260869565, 0.18032786885245902, 0.11801242236024845, 0.07586206896551724, 0.06611570247933884, 0.22727272727272727, 0.38461538461538464, 0.4631578947368421]
###########
# from 0 to 1 Tainan
# ic model, threshold=0.5
# precision
precision021_icmodel = [0.10382361149874407, 0.07356154406409322, 0.05718270571827057, 0.05396825396825397, 0.04891994917407878, 0.046420141620771044, 0.04590818363273453, 0.04513064133016627, 0.04437869822485207, 0.042105263157894736]
# recall
recall021_icmodel = [0.5568862275449101, 0.6215384615384615, 0.5347826086956522, 0.5573770491803278, 0.4782608695652174, 0.4068965517241379, 0.38016528925619836, 0.34545454545454546, 0.28846153846153844, 0.25263157894736843]

###########
# plot from 0 to 1
plots.draw(precision021_adaboost,
           precision021_svm,
           precision021_randomforest,
           precision021_tree,
           precision021_icmodel,
           [float('NaN')] * 10,
           "From 0 to 1-precision",
           "Precision",
           'upper right')

plots.draw(recall021_adaboost,
           recall021_svm,
           recall021_randomforest,
           recall021_tree,
           recall021_icmodel,
           [float('NaN')] * 10,
           "From 0 to 1-recall",
           "Recall",
           "upper right")

###########
# plot topk
# plots.draw_topk(tainan_topk_32_0,
#                 tainan_topk_39_0,
#                 tainan_topk_45_0,
#                 "Tainan_topk")

# plots.draw_topk(kaohsiung_topk_40,
#                 kaohsiung_topk_46,
#                 kaohsiung_topk_48,
#                 "Kaohsiung_topk")

#############
# plot topk- setting alpha
plots.draw_topk(tainan_topk_32_0,
                tainan_topk_32_00001,
                tainan_topk_32_001,
                tainan_topk_32_1,
                "Tainan_topk_alpha_early")

plots.draw_topk(tainan_topk_39_0,
               tainan_topk_39_00001,
               tainan_topk_39_001,
               tainan_topk_39_1,
               "Tainan_topk_alpha_middle")

plots.draw_topk(tainan_topk_45_0,
               tainan_topk_45_00001,
               tainan_topk_45_001,
               tainan_topk_45_1,
               "Tainan_topk_alpha_later")




###########
#### plot....
# ic_model.roc_plot(early_FPR, early_TPR, middle_FPR, middle_TPR, later_FPR, later_TPR, title)


### both are contagious region
plots.draw(precision16,
           precision19,
           precision22_depth2,
           precision1_depth2,
           precision7,
           precision13,
           'Tainan_both_are_contagious_precision',
           'Precision',
           'lower left')
plots.draw(recall16,
           recall19,
           recall22_depth2,
           recall1_depth2,
           recall7,
           recall13,
           'Tainan_both_are_contagious_recall',
           'Recall',
           'lower left')

plots.draw(precision25,
           precision28,
           precision31_depth2,
           precision4_depth2,
           precision10,
           precision34,
           "Kaohsiung_both_are_contagious_precision",
           'Precision',
           'lower left')
plots.draw(recall25,
           recall28,
           recall31_depth2,
           recall4_depth2,
           recall10,
           recall34,
           "Kaohsiung_both_are_contagious_recall",
           'Recall',
           'upper right')

plots.draw(precision17,
           precision20,
           precision23_depth2,
           precision2_depth2,
           precision8,
           precision14,
           "Tainan_not_contagious_region_precision",
           'Precision',
           'lower right',
           scale=1)

plots.draw(precision18,
           precision21,
           precision24_depth2,
           precision3_depth2,
           precision9,
           precision15,
           "Tainan_only_self_precision",
           'Precision',
           'upper right')

plots.draw(precision27,
           precision30,
           precision33_depth2,
           precision6_depth2,
           precision12,
           precision36,
           "Kaohsiung_only_self_precision",
           'Precision',
           'upper right')

plots.draw(precision26,
           precision29,
           precision32_depth2,
           precision5_depth2,
           precision11,
           precision35,
           "Kaohsiung_not_contagious_region_precision",
           'Precision',
           'lower left',
           scale=1)


plots.draw(recall17,
           recall20,
           recall23_depth2,
           recall2_depth2,
           recall8,
           recall14,
           "Tainan_not_contagious_region_recall",
           'Recall',
           'lower right',
           scale=1
           )

plots.draw(recall18,
           recall21,
           recall24_depth2,
           recall3_depth2,
           recall9,
           recall15,
           "Tainan_only_self_recall",
           'Recall',
           'upper left')

plots.draw(recall26,
           recall29,
           recall32_depth2,
           recall5_depth2,
           recall11,
           recall35,
           "Kaohsiung_not_contagious_region_recall",
           'Recall',
           'lower right',
           scale=1)

plots.draw(recall27,
           recall30,
           recall33_depth2,
           recall6_depth2,
           recall12,
           recall36,
           "Kaohsiung_only_self_recall",
           'Recall',
           'upper right')



##### overall precision recall accuracy
# tainan
plots.draw(precision_tainan_overall_adaboost,
           precision_tainan_overall_svm, 
           precision_tainan_overall_randomforest,
           precision_tainan_overall_decisiontree,
           precision_tainan_overall_icmodel,
           precision_tainan_overall_just,
           "Tainan_all_method_overall_precision",
           'Precision',
           'lower left')

plots.draw(recall_tainan_overall_adaboost,
           recall_tainan_overall_svm, 
           recall_tainan_overall_randomforest,
           recall_tainan_overall_decisiontree,
           recall_tainan_overall_icmodel,
           recall_tainan_overall_just,
           "Tainan_all_method_overall_recall",
           'Recall',
           'lower left')


plots.draw(accuracy_tainan_overall_adaboost,
           accuracy_tainan_overall_svm,
           accuracy_tainan_overall_randomforest,
           accuracy_tainan_overall_decisiontree,
           accuracy_tainan_overall_icmodel,
           accuracy_tainan_overall_just,
           "Tainan_all_method_overall_accuracy",
           'Accuracy',
           'lower right',
           scale=1)

plots.draw(precision_kaohsiung_overall_adaboost,
           precision_kaohsiung_overall_svm, 
           precision_kaohsiung_overall_randomforest,
           precision_kaohsiung_overall_decisiontree,
           precision_kaohsiung_overall_icmodel,
           precision_kaohsiung_overall_just,
           "Kaohsiung_all_method_overall_precision",
           'Precision',
           'lower left')

plots.draw(recall_kaohsiung_overall_adaboost,
           recall_kaohsiung_overall_svm, 
           recall_kaohsiung_overall_randomforest,
           recall_kaohsiung_overall_decisiontree,
           recall_kaohsiung_overall_icmodel,
           recall_kaohsiung_overall_just,
           "Kaohsiung_all_method_overall_recall",
           'Recall',
           'upper right')


plots.draw(accuracy_kaohsiung_overall_adaboost,
           accuracy_kaohsiung_overall_svm,
           accuracy_kaohsiung_overall_randomforest,
           accuracy_kaohsiung_overall_decisiontree,
           accuracy_kaohsiung_overall_icmodel,
           accuracy_kaohsiung_overall_just,
           "Kaohsiung_all_method_overall_accuracy",
           'Accuracy',
           'lower right',
           scale=1)

